import os
import httpx
from typing import Dict, List, Any

# SerpAPI base URL
SERPAPI_BASE_URL = "https://serpapi.com/search"

async def search_fashion_items(search_query: str, num_results: int = 10) -> List[Dict[str, Any]]:
    """
    Search for fashion items using SerpAPI based on the generated search query.
    
    Args:
        search_query: The search query generated by OpenAI
        num_results: Number of results to return (default: 10)
    
    Returns:
        List[Dict]: List of fashion recommendations with details
    """
    api_key = os.getenv("SERPAPI_API_KEY")
    if not api_key:
        raise ValueError("SERPAPI_API_KEY environment variable is not set")
    
    # Prepare query parameters
    params = {
        "q": search_query + " fashion clothing",
        "api_key": api_key,
        "engine": "google",
        "google_domain": "google.com",
        "gl": "us",
        "hl": "en",
        "tbm": "shop",  # Shopping results
        "num": num_results
    }
    
    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(SERPAPI_BASE_URL, params=params)
            response.raise_for_status()
            data = response.json()
            
            # Extract shopping results
            shopping_results = data.get("shopping_results", [])
            
            # Process and format the results
            recommendations = []
            for item in shopping_results:
                recommendation = {
                    "title": item.get("title", ""),
                    "link": item.get("link", ""),
                    "source": item.get("source", ""),
                    "price": item.get("price", ""),
                    "thumbnail": item.get("thumbnail", ""),
                    "rating": item.get("rating", None),
                    "reviews": item.get("reviews", None),
                    "extensions": item.get("extensions", [])
                }
                recommendations.append(recommendation)
            
            return recommendations
    except Exception as e:
        print(f"Error calling SerpAPI: {str(e)}")
        # Return empty list in case of error
        return []
